pipeline {
    agent any


    stages {
        stage('cloning, building and pushing to dockerhub ') {
            steps {
             withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')])
             {

                // Get some code from a GitHub repository
                git 'https://github.com/Gendi97/final-project.git'
                }

                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USERNAME_D', passwordVariable: 'PASSWORD_D')]){
                sh "docker build ./pythonapp -t ${USERNAME_D}/minia:v1 -f Dockerfile"
                sh "docker login -u ${USERNAME_D} -p ${PASSWORD_D}"
                sh "docker push ${USERNAME_D}/minia:v1"}
            }


        }
        stage('Update Kubeconfig') {
          steps {
            // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
              withCredentials([[
                $class: 'AmazonWebServicesCredentialsBinding',
                credentialsId: "aws",
                accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                sh """
                aws eks update-kubeconfig --name iti-eks
                """
              }
          }
      }
        stage('Deploy App') {
          steps {
            // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
              withCredentials([[
                $class: 'AmazonWebServicesCredentialsBinding',
                credentialsId: "aws",
                accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                sh """
                cd pythonapp
                kubectl create namespace python-app
                kubectl -n python-app apply -f deployment.yaml
                kubectl -n python-app apply -f services.yaml
                """
                sleep(time: 60, unit: "SECONDS")
              }
          }
      }

        stage('Reveal APP URL') {
          steps {
            // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
              withCredentials([[
                $class: 'AmazonWebServicesCredentialsBinding',
                credentialsId: "aws",
                accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                sh "aws elb describe-load-balancers | grep DNSName"
              }
          }
      }
  }
}
